<Activity mc:Ignorable="sap sap2010" x:Class="Excel_MBEW_MB52_Lookup_Deletion" this:Excel_MBEW_MB52_Lookup_Deletion.ArgInTimeSpanDelayShort="00:00:02" this:Excel_MBEW_MB52_Lookup_Deletion.ArgInTimeSpanDelayMedium="00:00:05" this:Excel_MBEW_MB52_Lookup_Deletion.ArgInTimeSpanDelayLong="00:00:10" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="ArgInMBEWTempLocation" Type="InArgument(x:String)" />
    <x:Property Name="ArgInMB52TempLocation" Type="InArgument(x:String)" />
    <x:Property Name="ArgInConfig" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="ArgInTimeSpanDelayShort" Type="InArgument(x:TimeSpan)" />
    <x:Property Name="ArgInTimeSpanDelayMedium" Type="InArgument(x:TimeSpan)" />
    <x:Property Name="ArgInTimeSpanDelayLong" Type="InArgument(x:TimeSpan)" />
    <x:Property Name="ArgInMB52SavedFileName" Type="InArgument(x:String)" />
    <x:Property Name="ArgInMBEWSavedFileName" Type="InArgument(x:String)" />
    <x:Property Name="ArgInProfitCenterSavedFileName" Type="InArgument(x:String)" />
    <x:Property Name="ArgInLogNotifications" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>694,859.333333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Excel_MBEW_MB52_Lookup_Deletion_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Excel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap:VirtualizedContainerService.HintSize="674,759.333333333333" sap2010:WorkflowViewState.IdRef="Flowchart_3">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:Int32" Name="vIntRetryCount" />
      <Variable x:TypeArguments="x:String" Name="vStrExceptionMessage" />
      <Variable x:TypeArguments="x:Int32" Name="vIntTempCount" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,74.6666666666667</av:Size>
        <x:Double x:Key="Width">640</x:Double>
        <x:Double x:Key="Height">723.3333333333336</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">300,77.1666666666667 300,183.666666666667</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID5</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,183.666666666667</av:Point>
          <av:Size x:Key="ShapeSize">200,231.333333333333</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,336.333333333333 300,416.666666666667</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Flowchart sap2010:Annotation.AnnotationText="Concatenates Material &amp; Plant values for each row from MB52 Report into a unique key and Material &amp; Valuation Area from MBEW Report into a unique key. A VLookUp is done based on these unique keys and if matched, that row is removed from MB52 Report." DisplayName="Excel_MBEW_MB52_Lookup_Deletion" sap:VirtualizedContainerService.HintSize="634,698" sap2010:WorkflowViewState.IdRef="Flowchart_5">
        <Flowchart.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="vDTMBEW" />
          <Variable x:TypeArguments="x:Int32" Name="vIntCountMBEW" />
          <Variable x:TypeArguments="s:String[]" Name="vStrArrConcatMBEW" />
          <Variable x:TypeArguments="sd:DataTable" Name="vDTMB52" />
          <Variable x:TypeArguments="x:Int32" Name="vIntMB52ColCount" />
          <Variable x:TypeArguments="x:Int32" Name="vIntIndexMB52" />
          <Variable x:TypeArguments="x:Int32" Name="vIntRowCountMBEW" />
          <Variable x:TypeArguments="x:Int32" Name="vIntRowCountMB52" />
          <Variable x:TypeArguments="sd:DataTable" Name="vDTMB52Split" />
          <Variable x:TypeArguments="sd:DataTable" Name="vDTTemp" />
          <Variable x:TypeArguments="x:Int32" Name="vIntPosition" />
          <Variable x:TypeArguments="sd:DataTable" Name="vDtMB52Final" />
        </Flowchart.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">0,2.66666666666666</av:Point>
            <av:Size x:Key="ShapeSize">60,74.6666666666667</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">60,40 90,40 90,106 110,106</av:PointCollection>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Flowchart.StartNode>
          <x:Reference>__ReferenceID4</x:Reference>
        </Flowchart.StartNode>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">330,304.5</av:Point>
              <av:Size x:Key="ShapeSize">200,181.333333333333</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">430,485.833333333333 430,519</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Eliminates the rows that match when concatenated unique values are compared and they match and then the extra temp column that was added for concatenation is removed from MB52 Excel" DisplayName="Excel Application Scope-Deletion of Rows from MB52" sap:VirtualizedContainerService.HintSize="200,181.333333333333" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_12" WorkbookPath="[ArgInMB52TempLocation]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'MB52' Excel" sap:VirtualizedContainerService.HintSize="731.333333333333,1521.33333333333" sap2010:WorkflowViewState.IdRef="WindowScope_12" InformativeScreenshot="9d4739ac4a81087d1f6f243b6ae9f7cb" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*MB52* - Excel' /&gt;">
                  <ui:WindowScope.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                      </ActivityAction.Argument>
                      <Sequence sap:VirtualizedContainerService.HintSize="697.333333333333,1375.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_69">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="655.333333333333,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_12" />
                        <ui:ExcelReadRange AddHeaders="True" DataTable="[vDTMB52]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="655.333333333333,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_19" SheetName="[ArgInConfig(&quot;MB52_SheetName&quot;).ToString]">
                          <ui:ExcelReadRange.Range>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </ui:ExcelReadRange.Range>
                        </ui:ExcelReadRange>
                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="655.333333333333,835.333333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[vStrArrConcatMBEW]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="618.666666666667,700" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[vDTMB52]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="576.666666666667,608" sap2010:WorkflowViewState.IdRef="ForEachRow_16">
                                  <ui:ForEachRow.Body>
                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,458.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If Condition="[row(&quot;ConcatMB52&quot;).ToString=item]" sap:VirtualizedContainerService.HintSize="484,366.666666666667" sap2010:WorkflowViewState.IdRef="If_4">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="304,216" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_51">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[vIntPosition]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[vDTMB52.Rows.IndexOf(row)]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_4" Mode="Remove" NoRows="1" Position="[vIntPosition+1]" SheetName="[ArgInConfig(&quot;MB52_SheetName&quot;).ToString]" />
                                            </Sequence>
                                          </If.Then>
                                        </If>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEachRow.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ForEachRow>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEach>
                        <ui:FilterDataTable DataTable="[vDTMB52]" DisplayName="Filter Data Table" sap:VirtualizedContainerService.HintSize="655.333333333333,58.6666666666667" sap2010:WorkflowViewState.IdRef="FilterDataTable_13" OutputDataTable="[vDTMB52]" SelectColumnsMode="Remove">
                          <ui:FilterDataTable.Filters>
                            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                              <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                            </scg:List>
                          </ui:FilterDataTable.Filters>
                          <ui:FilterDataTable.SelectColumns>
                            <scg:List x:TypeArguments="InArgument" Capacity="4">
                              <InArgument x:TypeArguments="x:String">["ConcatMB52"]</InArgument>
                            </scg:List>
                          </ui:FilterDataTable.SelectColumns>
                        </ui:FilterDataTable>
                        <ui:ExcelInsertDeleteColumns DisplayName="Insert/Delete Columns" sap:VirtualizedContainerService.HintSize="655.333333333333,22" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteColumns_4" Mode="Remove" NoColumns="1" Position="40" SheetName="[ArgInConfig(&quot;MB52_SheetName&quot;).ToString]" />
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke LogFile workflow" sap:VirtualizedContainerService.HintSize="655.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Logging\LogFile.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="argIstrLogNumber">LOG-M38</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="argIdicConfig">[ArgInConfig]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="argIstrKeyValues" />
                            <InArgument x:TypeArguments="x:String" x:Key="argIstrErrorScreenshot" />
                            <InArgument x:TypeArguments="sd:DataTable" x:Key="argIdtLogNotification">[ArgInLogNotifications]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="arglstrTechincalExceptionMessage" />
                            <OutArgument x:TypeArguments="x:String" x:Key="argOException" />
                            <InArgument x:TypeArguments="x:Int32" x:Key="argIstrTransactionID">0</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="argInDBConnectionString">[ArgInConfig("DB_ConnectionString").ToString]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </ActivityAction>
                  </ui:WindowScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:WindowScope>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">330,519</av:Point>
                  <av:Size x:Key="ShapeSize">200,22</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">440,208.666666666667 440,263.666666666667</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Delay DisplayName="DelayShort" Duration="[ArgInTimeSpanDelayShort]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_25" />
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
        <FlowStep x:Name="__ReferenceID1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">330,8.5</av:Point>
              <av:Size x:Key="ShapeSize">200,198</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">430,206.5 430,249</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap2010:Annotation.AnnotationText="Reads the downloaded MB52 Report and eliminates blank rows that occur after the data and concatenates columns to get the unique value that needs to be checked against MBEW" DisplayName="Processing MB52 Data" sap:VirtualizedContainerService.HintSize="770.666666666667,4090.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_65">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap:VirtualizedContainerService.HintSize="728.666666666667,3953.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_64">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Delay DisplayName="DelayShort" Duration="[ArgInTimeSpanDelayShort]" sap:VirtualizedContainerService.HintSize="686.666666666667,22" sap2010:WorkflowViewState.IdRef="Delay_22" />
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="686.666666666667,3672.66666666667" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_11" WorkbookPath="[ArgInMB52TempLocation]">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'EXCEL.EXE Downloaded'" sap:VirtualizedContainerService.HintSize="652.666666666667,3564" sap2010:WorkflowViewState.IdRef="WindowScope_11" InformativeScreenshot="72e932852b7f534a806ded29e3a83473" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*MB52* - Excel' /&gt;">
                      <ui:WindowScope.Body>
                        <ActivityAction x:TypeArguments="x:Object">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="618.666666666667,3418" sap2010:WorkflowViewState.IdRef="Sequence_63">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="576.666666666667,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_11" />
                            <ui:ExcelReadRange AddHeaders="True" DataTable="[vDTMB52]" DisplayName="Read Range MB52 Sheet" sap:VirtualizedContainerService.HintSize="576.666666666667,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_17" Range="[&quot;A1:AM&quot;+ArgInConfig(&quot;MB52_RangeLimiter&quot;).ToString]" SheetName="[ArgInConfig(&quot;MB52_SheetName&quot;).ToString]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadRange>
                            <Assign sap:VirtualizedContainerService.HintSize="576.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_53">
                              <Assign.To>
                                <OutArgument x:TypeArguments="sd:DataTable">[vDtMB52]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="sd:DataTable">[vDtMB52.select("[Base Unit of Measure] &lt;&gt; ''"). CopyToDataTable()]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="576.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_54">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[vIntTempCount]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[vDTMB52.Rows.Count]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:ExcelReadRange AddHeaders="True" DataTable="[vDTMB52]" DisplayName="Read Range MB52 Sheet" sap:VirtualizedContainerService.HintSize="576.666666666667,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_18" Range="[&quot;A1:AM&quot;+vIntTempCount.ToString]" SheetName="Sheet1">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelReadRange>
                            <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="ConcatMB52" DataTable="[vDTMB52]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="576.666666666667,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_8" />
                            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[vDTMB52]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="576.666666666667,454" sap2010:WorkflowViewState.IdRef="ForEachRow_15">
                              <ui:ForEachRow.Body>
                                <ActivityAction x:TypeArguments="sd:DataRow">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,304.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If Condition="[row(&quot;Material&quot;).ToString.Trim&lt;&gt;&quot;&quot; and row(&quot;Plant&quot;).ToString&lt;&gt;&quot;&quot;]" sap:VirtualizedContainerService.HintSize="484,212.666666666667" sap2010:WorkflowViewState.IdRef="If_6">
                                      <If.Then>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_55">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Object">[row("ConcatMB52")]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[row("Material").ToString+"|"+row("Plant").ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEachRow.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ForEachRow>
                            <Assign sap:VirtualizedContainerService.HintSize="576.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_48">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[vIntMB52ColCount]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[vDTMB52.Columns.Count]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="576.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_49">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[vIntIndexMB52]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[vDTMB52.Columns.IndexOf("ConcatMB52")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="576.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_50">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[vIntRowCountMB52]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[vDTMB52.rows.Count]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'EXCEL.EXE MasterFile'" sap:VirtualizedContainerService.HintSize="576.666666666667,1812" sap2010:WorkflowViewState.IdRef="WindowScope_13" InformativeScreenshot="ed24dcc30f6c5f9eb19f6db0f46c01b8" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*' /&gt;">
                              <ui:WindowScope.Body>
                                <ActivityAction x:TypeArguments="x:Object">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,1666" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_13" />
                                    <Delay DisplayName="Delay - 5sec" Duration="00:00:05" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_31" />
                                    <ui:ExcelSelectRange DisplayName="Select Range1" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_3" Range="[&quot;A1:A&quot;+(vdtmb52.rows.Count+1).tostring]" SheetName="[ArgInConfig(&quot;MB52_SheetName&quot;).ToString]" />
                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="334,117.333333333333" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="del" KeyModifiers="None" SpecialKey="True">
                                      <ui:SendHotkey.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:SendHotkey.Target>
                                    </ui:SendHotkey>
                                    <ui:ExcelSelectRange DisplayName="Select Range" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_4" Range="[&quot;A1:A&quot;+(vdtmb52.rows.Count+1).tostring]" SheetName="Sheet1" />
                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Tab Item  Home'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT">
                                      <ui:Click.CursorPosition>
                                        <ui:CursorPosition Position="Center">
                                          <ui:CursorPosition.OffsetX>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetX>
                                          <ui:CursorPosition.OffsetY>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetY>
                                        </ui:CursorPosition>
                                      </ui:Click.CursorPosition>
                                      <ui:Click.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="4565dcc9c689b84f4eb6b3309d40e369" Selector="&lt;uia cls='MsoCommandBar' helpText='Ribbon toolbar' /&gt;&lt;uia cls='NetUIPanViewer' name='Ribbon Tabs' /&gt;&lt;uia cls='NetUIRibbonTab' name='Home' /&gt;">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:Click.Target>
                                    </ui:Click>
                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Menu Item  Format'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT">
                                      <ui:Click.CursorPosition>
                                        <ui:CursorPosition Position="Center">
                                          <ui:CursorPosition.OffsetX>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetX>
                                          <ui:CursorPosition.OffsetY>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetY>
                                        </ui:CursorPosition>
                                      </ui:Click.CursorPosition>
                                      <ui:Click.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="3ecdae71a4b125126c719dbe0c75085e" Selector="&lt;uia cls='MsoCommandBar' helpText='Ribbon toolbar' /&gt;&lt;uia cls='NetUIOrderedGroup' name='Home' /&gt;&lt;uia cls='NetUIChunk' name='Cells' /&gt;&lt;uia cls='NetUIAnchor' name='Format' /&gt;">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:Click.Target>
                                    </ui:Click>
                                    <Delay DisplayName="Delay Short" Duration="00:00:02" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_27" />
                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'menu item'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT">
                                      <ui:Click.CursorPosition>
                                        <ui:CursorPosition Position="Center">
                                          <ui:CursorPosition.OffsetX>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetX>
                                          <ui:CursorPosition.OffsetY>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetY>
                                        </ui:CursorPosition>
                                      </ui:Click.CursorPosition>
                                      <ui:Click.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="c51b5502278bfde0f8e1b4d6ebcbbf34" Selector="&lt;wnd cls='NetUIHWND' idx='2' /&gt;&lt;ctrl name='Format Cells...' role='menu item' /&gt;">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:Click.Target>
                                    </ui:Click>
                                    <Delay DisplayName="Delay Short" Duration="00:00:02" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_28" />
                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'list item  Text'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT">
                                      <ui:Click.CursorPosition>
                                        <ui:CursorPosition Position="Center">
                                          <ui:CursorPosition.OffsetX>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetX>
                                          <ui:CursorPosition.OffsetY>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetY>
                                        </ui:CursorPosition>
                                      </ui:Click.CursorPosition>
                                      <ui:Click.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="92cd39a3b73282cfa75c303b2be62c77" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Format Cells' /&gt;&lt;ctrl name='Category:' role='list' /&gt;&lt;ctrl name='Text' role='list item' /&gt;">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:Click.Target>
                                    </ui:Click>
                                    <Delay DisplayName="Delay Short" Duration="00:00:02" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_29" />
                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  OK'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT">
                                      <ui:Click.CursorPosition>
                                        <ui:CursorPosition Position="Center">
                                          <ui:CursorPosition.OffsetX>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetX>
                                          <ui:CursorPosition.OffsetY>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetY>
                                        </ui:CursorPosition>
                                      </ui:Click.CursorPosition>
                                      <ui:Click.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="94a5f12f164b984e41db656544ce78dc" Selector="&lt;wnd app='excel.exe' cls='bosa_sdm_XL9' title='Format Cells' /&gt;&lt;ctrl name='OK' role='push button' /&gt;">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:Click.Target>
                                    </ui:Click>
                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="334,117.333333333333" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="s" KeyModifiers="Ctrl">
                                      <ui:SendHotkey.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:SendHotkey.Target>
                                    </ui:SendHotkey>
                                    <Delay DisplayName="Delay Short" Duration="00:00:02" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_30" />
                                  </Sequence>
                                </ActivityAction>
                              </ui:WindowScope.Body>
                            </ui:WindowScope>
                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[vDTMB52]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="576.666666666667,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="[ArgInConfig(&quot;MB52_SheetName&quot;).ToString]" StartingCell="A1" />
                            <Delay DisplayName="DelayShort" Duration="[ArgInTimeSpanDelayShort]" sap:VirtualizedContainerService.HintSize="576.666666666667,22" sap2010:WorkflowViewState.IdRef="Delay_23" />
                          </Sequence>
                        </ActivityAction>
                      </ui:WindowScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:WindowScope>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelApplicationScope>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke LogFile workflow" sap:VirtualizedContainerService.HintSize="686.666666666667,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Logging\LogFile.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="argIstrLogNumber">LOG-M37</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="argIdicConfig">[ArgInConfig]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="argIstrKeyValues" />
                  <InArgument x:TypeArguments="x:String" x:Key="argIstrErrorScreenshot" />
                  <InArgument x:TypeArguments="sd:DataTable" x:Key="argIdtLogNotification">[ArgInLogNotifications]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="arglstrTechincalExceptionMessage" />
                  <OutArgument x:TypeArguments="x:String" x:Key="argOException" />
                  <InArgument x:TypeArguments="x:Int32" x:Key="argIstrTransactionID">0</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="argInDBConnectionString">[ArgInConfig("DB_ConnectionString").ToString]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">330,249</av:Point>
                  <av:Size x:Key="ShapeSize">200,22</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">430,271 430,304.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Delay DisplayName="DelayShort" Duration="[ArgInTimeSpanDelayShort]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_24" />
              <FlowStep.Next>
                <x:Reference>__ReferenceID0</x:Reference>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
        <FlowStep x:Name="__ReferenceID4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">110,7</av:Point>
              <av:Size x:Key="ShapeSize">200,198</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">310,106 330,106 330,107.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap2010:Annotation.AnnotationText="Reads the downloaded MBEW Report and eliminates the blank rows that come after the data and concatenates the unique value that needs to be checked against MB52" DisplayName="Reading Downloaded MBEW Data" sap:VirtualizedContainerService.HintSize="200,198" sap2010:WorkflowViewState.IdRef="Sequence_60">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke LogFile workflow" sap:VirtualizedContainerService.HintSize="686.666666666667,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Logging\LogFile.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="argIstrLogNumber">LOG-M35</InArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="argIdicConfig">[ArgInConfig]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="argIstrKeyValues" />
                <InArgument x:TypeArguments="x:String" x:Key="argIstrErrorScreenshot" />
                <InArgument x:TypeArguments="sd:DataTable" x:Key="argIdtLogNotification">[ArgInLogNotifications]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="arglstrTechincalExceptionMessage" />
                <OutArgument x:TypeArguments="x:String" x:Key="argOException" />
                <InArgument x:TypeArguments="x:Int32" x:Key="argIstrTransactionID">0</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="argInDBConnectionString">[ArgInConfig("DB_ConnectionString").ToString]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope Downloaded MBEW Excel" sap:VirtualizedContainerService.HintSize="686.666666666667,2158" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_10" WorkbookPath="[ArgInMBEWTempLocation]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'MBEW-Profit' Excel" sap:VirtualizedContainerService.HintSize="652.666666666667,2049.33333333333" sap2010:WorkflowViewState.IdRef="WindowScope_10" InformativeScreenshot="d0221d49e52636d2342e90604699bf5c" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*MBEW* - Excel' /&gt;">
                    <ui:WindowScope.Body>
                      <ActivityAction x:TypeArguments="x:Object">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="618.666666666667,1903.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_59">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="576.666666666667,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_10" />
                          <ui:ExcelReadRange AddHeaders="True" DataTable="[vDTMBEW]" DisplayName="Read Range MBEW Sheet" sap:VirtualizedContainerService.HintSize="576.666666666667,52.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_13" Range="[&quot;A1&quot;+&quot;:B&quot;+ArgInConfig(&quot;MBEW_RangeLimiter&quot;).ToString]" SheetName="[ArgInConfig(&quot;MBEW_SheetName&quot;).ToString]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ExcelReadRange>
                          <Assign sap:VirtualizedContainerService.HintSize="576.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_52">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sd:DataTable">[vDtMBEW]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sd:DataTable">[vDtMBEW.select("Material &lt;&gt; ''"). CopyToDataTable()]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="MBEWConcat" DataTable="[vDTMBEW]" DisplayName="Add Data Column for Concatenation" sap:VirtualizedContainerService.HintSize="576.666666666667,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_7" />
                          <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[vDTMBEW]" DisplayName="For Each Row in MBEW DataTable" sap:VirtualizedContainerService.HintSize="576.666666666667,454" sap2010:WorkflowViewState.IdRef="ForEachRow_13">
                            <ui:ForEachRow.Body>
                              <ActivityAction x:TypeArguments="sd:DataRow">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,304.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[row(0).ToString.Trim&lt;&gt;&quot;&quot; and row(1).ToString.trim&lt;&gt;&quot;&quot;]" sap:VirtualizedContainerService.HintSize="484,212.666666666667" sap2010:WorkflowViewState.IdRef="If_5">
                                    <If.Then>
                                      <Assign DisplayName="Joining two Column values" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_41">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[row(2)]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[row(0).ToString+"|"+row(1).ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEachRow.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEachRow>
                          <ui:FilterDataTable DataTable="[vDTMBEW]" DisplayName="Keeping Concatenated values - Filter Data Table" sap:VirtualizedContainerService.HintSize="576.666666666667,58.6666666666667" sap2010:WorkflowViewState.IdRef="FilterDataTable_12" OutputDataTable="[vDTMBEW]" SelectColumnsMode="Keep">
                            <ui:FilterDataTable.Filters>
                              <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                              </scg:List>
                            </ui:FilterDataTable.Filters>
                            <ui:FilterDataTable.SelectColumns>
                              <scg:List x:TypeArguments="InArgument" Capacity="4">
                                <InArgument x:TypeArguments="x:String">["MBEWConcat"]</InArgument>
                              </scg:List>
                            </ui:FilterDataTable.SelectColumns>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:FilterDataTable>
                          <Assign DisplayName="Set MBEWCount as 0" sap:VirtualizedContainerService.HintSize="576.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_42">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[vIntCountMBEW]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">0</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Set RowCount" sap:VirtualizedContainerService.HintSize="576.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_43">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[vIntRowCountMBEW]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[vDTMBEW.Rows.Count]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Initializing Array" sap:VirtualizedContainerService.HintSize="576.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_44">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:String[]">[vStrArrConcatMBEW]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:String[]">[new string(vIntRowCountMBEW){}]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[vDTMBEW]" DisplayName="For Each Row in MBEW DataTable" sap:VirtualizedContainerService.HintSize="576.666666666667,405.333333333333" sap2010:WorkflowViewState.IdRef="ForEachRow_14">
                            <ui:ForEachRow.Body>
                              <ActivityAction x:TypeArguments="sd:DataRow">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,256" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Assigning value to Array" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_45">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[vStrArrConcatMBEW(vIntCountMBEW)]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Incrementing Count" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_46">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[vIntCountMBEW]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[vIntCountMBEW+1]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEachRow.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEachRow>
                          <Delay DisplayName="DelayShort" Duration="[ArgInTimeSpanDelayShort]" sap:VirtualizedContainerService.HintSize="576.666666666667,22" sap2010:WorkflowViewState.IdRef="Delay_21" />
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke LogFile workflow" sap:VirtualizedContainerService.HintSize="576.666666666667,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Logging\LogFile.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="argIstrLogNumber">LOG-M36</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="argIdicConfig">[ArgInConfig]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="argIstrKeyValues" />
                              <InArgument x:TypeArguments="x:String" x:Key="argIstrErrorScreenshot" />
                              <InArgument x:TypeArguments="sd:DataTable" x:Key="argIdtLogNotification">[ArgInLogNotifications]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="arglstrTechincalExceptionMessage" />
                              <OutArgument x:TypeArguments="x:String" x:Key="argOException" />
                              <InArgument x:TypeArguments="x:Int32" x:Key="argIstrTransactionID">0</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="argInDBConnectionString">[ArgInConfig("DB_ConnectionString").ToString]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </Sequence>
                      </ActivityAction>
                    </ui:WindowScope.Body>
                  </ui:WindowScope>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelApplicationScope>
          </Sequence>
          <FlowStep.Next>
            <x:Reference>__ReferenceID1</x:Reference>
          </FlowStep.Next>
        </FlowStep>
        <x:Reference>__ReferenceID2</x:Reference>
        <x:Reference>__ReferenceID3</x:Reference>
      </Flowchart>
    </FlowStep>
  </Flowchart>
</Activity>